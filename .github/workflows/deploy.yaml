name: Application deployment
run-name: Application deployment run

on: 
  push:
  #   branches:
  #     - main

jobs:
  deploy-to-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-repo
        uses: actions/checkout@v4

      - name: docker-login
        run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build-image
        run: docker build -t $DOCKERHUB_USERNAME/marmita-webserver -f ./build/Dockerfile .
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: push-to-hub
        run: docker push $DOCKERHUB_USERNAME/marmita-webserver
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
                    
  pull-webserver: 
    runs-on: ubuntu-latest
    needs: [deploy-to-dockerhub]
    if: needs.deploy-to-dockerhub.result == 'success'
    steps:
      - name: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          mask-aws-account-id: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ssm-pull-image
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Name,Values=marmita-backend-webserver" \
            --parameters commands="docker kill webserver && docker pull $DOCKERHUB_USERNAME/marmita-webserver && docker run -d --rm -p 80:80 --name webserver $DOCKERHUB_USERNAME/marmita-webserver"
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
